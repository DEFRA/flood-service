############# SQL for u_flood.impact table

-- Table: u_flood.impact

-- DROP TABLE u_flood.impact;

CREATE TABLE u_flood.impact
(
    id bigint NOT NULL DEFAULT nextval('impact_id_seq'::regclass),
    rloi_id integer NOT NULL,
    value numeric,
    units text COLLATE pg_catalog."default",
    comment text COLLATE pg_catalog."default",
    short_name text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    type text COLLATE pg_catalog."default",
    obs_flood_year text COLLATE pg_catalog."default",
    obs_flood_month text COLLATE pg_catalog."default",
    source text COLLATE pg_catalog."default",
    lat numeric,
    lng numeric,
    geom geometry,
    CONSTRAINT impact_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE flood_tables;

ALTER TABLE u_flood.impact
    OWNER to u_flood;

####### If table already exists then we need to truncate the table (ie if this is not the first load)
psql ${FLOOD_SERVICE_CONNECTION_STRING} -c "TRUNCATE TABLE u_flood.impact;"


########## Import the impacts-clean.csv to the impacts table
psql ${FLOOD_SERVICE_CONNECTION_STRING} -c "\copy impact(rloi_id, value, units, lng, lat, comment, short_name, description, type, obs_flood_year, obs_flood_month, source) from /home/tedd/flood-service/data-load/impacts-clean-v3.csv with delimiter as '|' CSV HEADER"

########## Update the geom field with a point created from the coordinates
psql ${FLOOD_SERVICE_CONNECTION_STRING} -c "UPDATE u_flood.impact SET geom = ST_GeomFromText('POINT(' || lng || ' ' || lat || ')',4326);"

####### Refresh mview with data (if exists yet, ie if this is not the first load)
psql ${FLOOD_SERVICE_CONNECTION_STRING} -c "refresh materialized view u_flood.impact_mview with data;"
